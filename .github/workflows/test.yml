name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}, Django ${{ matrix.django-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
        django-version: ["3.2", "4.0", "4.1", "4.2", "5.0"]
        exclude:
          # Django 5.0 requires Python 3.10+
          - python-version: "3.8"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.0"
          # Django 4.2 LTS is the last to support Python 3.8
          - python-version: "3.8"
            django-version: "4.0"
          - python-version: "3.8"
            django-version: "4.1"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system "Django~=${{ matrix.django-version }}.0"
        uv pip install --system -e ".[test]"

    - name: Run tests with pytest
      run: |
        python -m pytest tests/ -v --tb=short --cov=create_initial_superuser --cov-report=xml --cov-report=term-missing

    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11' && matrix.django-version == '4.2'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"

    - name: Run black
      run: black --check --diff .

    - name: Run isort
      run: isort --check-only --diff .

    - name: Run flake8
      run: flake8 create_initial_superuser tests

    - name: Run mypy
      run: mypy create_initial_superuser

  security:
    name: Security Check
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"
        uv pip install --system bandit safety

    - name: Run bandit security check
      run: bandit -r create_initial_superuser

    - name: Run safety check
      run: safety check

  build:
    name: Build Package
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Build package
      run: |
        uv build

    - name: Check package
      run: |
        uv pip install --system twine
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/
