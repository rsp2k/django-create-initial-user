name: Security and Dependencies

on:
  schedule:
    # Run daily at 6 AM UTC
    - cron: '0 6 * * *'
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'pyproject.toml'
      - 'requirements*.txt'

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system -e ".[dev]"

    - name: Run Bandit security scanner
      run: |
        uv run bandit -r create_initial_superuser -f json -o bandit-report.json
        uv run bandit -r create_initial_superuser

    - name: Upload Bandit report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: bandit-report
        path: bandit-report.json

    - name: Run Safety check
      run: |
        uv run safety check --json --output safety-report.json
        uv run safety check

    - name: Upload Safety report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: safety-report
        path: safety-report.json

  dependency-review:
    name: Dependency Review
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
    - uses: actions/checkout@v4
    - uses: actions/dependency-review-action@v3

  test-latest-dependencies:
    name: Test Latest Dependencies
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install latest Django
      run: |
        uv pip install --system "Django>=4.2,<6.0"
        uv pip install --system -e ".[test]"

    - name: Show installed versions
      run: |
        python -c "import django; print(f'Django: {django.get_version()}')"
        python -c "import sys; print(f'Python: {sys.version}')"

    - name: Run tests with latest dependencies
      run: |
        python -m django test --settings=tests.settings -v 2

  create-issue-on-failure:
    name: Create Issue on Security Failure
    runs-on: ubuntu-latest
    needs: [security-scan]
    if: failure() && github.event_name == 'schedule'

    steps:
    - uses: actions/checkout@v4

    - name: Create Issue
      uses: actions/github-script@v6
      with:
        script: |
          const title = 'ðŸš¨ Security Scan Failed - ' + new Date().toISOString().split('T')[0];
          const body = `
          ## Security Scan Failure

          The scheduled security scan has failed. Please review the security reports:

          - **Workflow**: ${context.workflow}
          - **Run ID**: ${context.runId}
          - **Date**: ${new Date().toISOString()}

          ### Actions Required:

          1. Check the workflow logs for detailed error messages
          2. Review Bandit and Safety reports in the artifacts
          3. Update dependencies if security vulnerabilities are found
          4. Close this issue once resolved

          ### Links:

          - [Workflow Run](${context.payload.repository.html_url}/actions/runs/${context.runId})
          - [Security Workflow](${context.payload.repository.html_url}/actions/workflows/security.yml)

          ---

          This issue was automatically created by the Security and Dependencies workflow.
          `;

          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: title,
            body: body,
            labels: ['security', 'automated', 'needs-triage']
          });
