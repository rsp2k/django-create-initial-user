name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run tests weekly on Mondays at 8 AM UTC
    - cron: '0 8 * * 1'
  workflow_dispatch:
    inputs:
      python-version:
        description: 'Python version to test'
        required: false
        default: '3.11'
        type: choice
        options:
          - '3.9'
          - '3.10'
          - '3.11'
          - '3.12'
      django-version:
        description: 'Django version to test'
        required: false
        default: '4.2'
        type: choice
        options:
          - '4.2'
          - '5.0'
          - '5.1'

jobs:
  quick-test:
    name: Quick Test (Python ${{ inputs.python-version || '3.11' }}, Django ${{ inputs.django-version || '4.2' }})
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version || '3.11' }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system "Django~=${{ inputs.django-version || '4.2' }}.0"
        uv pip install --system -e ".[test]"

    - name: Run Django checks
      run: |
        python -m django check --settings=tests.settings

    - name: Run tests
      run: |
        python -m django test --settings=tests.settings -v 2

  comprehensive-test:
    name: Comprehensive Test Suite
    runs-on: ubuntu-latest
    if: github.event_name != 'workflow_dispatch'

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        django-version: ["4.2", "5.0", "5.1"]
        exclude:
          - python-version: "3.9"
            django-version: "5.0"
          - python-version: "3.9"
            django-version: "5.1"

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      uses: astral-sh/setup-uv@v3

    - name: Install dependencies
      run: |
        uv pip install --system "Django~=${{ matrix.django-version }}.0"
        uv pip install --system -e ".[test]"

    - name: Run Django checks
      run: |
        python -m django check --settings=tests.settings

    - name: Run tests
      run: |
        python -m django test --settings=tests.settings -v 2

    - name: Generate coverage report
      if: matrix.python-version == '3.11' && matrix.django-version == '4.2'
      run: |
        uv pip install --system coverage
        coverage run --source='create_initial_superuser' -m django test --settings=tests.settings
        coverage report -m
        coverage xml

    - name: Upload coverage
      if: matrix.python-version == '3.11' && matrix.django-version == '4.2'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  test-status:
    name: Test Status
    runs-on: ubuntu-latest
    needs: [quick-test, comprehensive-test]
    if: always()

    steps:
    - name: Report Status
      run: |
        if [ "${{ needs.quick-test.result }}" = "success" ] || [ "${{ needs.comprehensive-test.result }}" = "success" ]; then
          echo "✅ Tests passed successfully!"
          exit 0
        elif [ "${{ needs.quick-test.result }}" = "skipped" ] && [ "${{ needs.comprehensive-test.result }}" = "success" ]; then
          echo "✅ Comprehensive tests passed!"
          exit 0
        elif [ "${{ needs.quick-test.result }}" = "success" ] && [ "${{ needs.comprehensive-test.result }}" = "skipped" ]; then
          echo "✅ Quick tests passed!"
          exit 0
        else
          echo "❌ Tests failed!"
          exit 1
        fi
