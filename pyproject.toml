[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "django-create-initial-user"
version = "1.2.1"
description = "Django authentication backend that automatically creates a superuser on first login"
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { name = "Ryan Malloy", email = "ryan@supported.systems" },
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: Django",
    "Framework :: Django :: 3.2",
    "Framework :: Django :: 4.0",
    "Framework :: Django :: 4.1",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["django", "authentication", "superuser", "backend"]
dependencies = [
    "Django>=4.2",
]
requires-python = ">=3.9"

[project.optional-dependencies]
dev = [
    "coverage>=7.0",
    "black>=23.12",
    "isort>=5.13",
    "flake8>=7.0",
    "mypy>=1.8",
    "django-stubs>=4.2",
    "bandit>=1.7",
    "safety>=2.3",
    "pre-commit>=3.6",
    "pyupgrade>=3.15",
    "autoflake>=2.2",
]
test = [
    "coverage>=7.0",
]

[project.urls]
Homepage = "https://github.com/yourusername/django-create-initial-user"
Repository = "https://github.com/yourusername/django-create-initial-user"
Issues = "https://github.com/yourusername/django-create-initial-user/issues"
Changelog = "https://github.com/yourusername/django-create-initial-user/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.sdist]
include = [
    "/create_initial_superuser",
    "/tests",
    "/README.md",
    "/LICENSE",
]

[tool.hatch.build.targets.wheel]
packages = ["create_initial_superuser"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_django = "django"
known_first_party = "create_initial_superuser"
sections = ["FUTURE", "STDLIB", "DJANGO", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# Coverage configuration
[tool.coverage.run]
source = ["create_initial_superuser"]
omit = [
    "*/migrations/*",
    "*/tests/*",
    "*/venv/*",
    "*/virtualenv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

# MyPy configuration
[tool.mypy]
python_version = "1.2.1"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = ["mypy_django_plugin.main"]

[tool.django-stubs]
django_settings_module = "tests.settings"
